version: '3.9'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    env_file: .env
    volumes:
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - db

  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearchdata
        target: /usr/share/elasticsearch/data
    networks:
      - elk
  
  kibana:
    image: kibana:7.8.1
    container_name: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    env_file: .env
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  monstache:        
    image: rwynn/monstache:latest
    container_name: monstache
    # command: -f /config.toml
    command: tail -F anything
    volumes:          
      - ./monstachedata:/monstache/
      - type: bind
        source: ./monstache/config.toml
        target: /config.toml
        read_only: true
    ports:
      - "8080:8080"
    networks:
      - db
      - elk
    depends_on:
      - elasticsearch
      - mongodb

networks:
  db:
    driver: bridge
  elk:
    driver: bridge